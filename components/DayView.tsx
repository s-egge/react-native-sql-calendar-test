import { useState, useEffect } from "react"
import { insertDay } from "@/db/database"
import {
  Button,
  XStack,
  YStack,
  Label,
  ToggleGroup,
  Text,
  H1,
  Accordion,
  Paragraph,
  Square,
  TextArea,
  Separator,
} from "tamagui"
import { ChevronDown } from "@tamagui/lucide-icons"
import Animated, {
  interpolate,
  useAnimatedRef,
  useAnimatedStyle,
  useScrollViewOffset,
} from "react-native-reanimated"
import { View, ScrollView } from "react-native"

const options = ["None", "Spotting", "Light", "Medium", "Heavy"]

// radio buttons adapted from code generated by ChatGPT-4o
function FlowToggleGroup({
  selectedOption,
  setSelectedOption,
}: {
  selectedOption: number
  setSelectedOption: (option: number) => void
}) {
  return (
    <YStack>
      <ToggleGroup
        orientation={"vertical"}
        size={options.length}
        type="single"
        value={options[selectedOption]}
        onValueChange={(value) => setSelectedOption(options.indexOf(value))}
      >
        {options.map((option, index) => (
          <ToggleGroup.Item key={option} value={options[index]}>
            <Text style={{ padding: 10 }}>{option}</Text>
          </ToggleGroup.Item>
        ))}
      </ToggleGroup>
    </YStack>
  )
}

export default function DayView({
  date,
  dateFlow,
}: {
  date: string
  dateFlow: number
}) {
  const [flow, setFlow] = useState<number>(dateFlow)

  function onSave() {
    console.log("save: " + date + " " + flow)
    insertDay(date, flow)
  }

  useEffect(() => {
    console.log("dateFlow: " + dateFlow)
    setFlow(dateFlow)
  }, [dateFlow])

  return (
    <YStack overflow="scroll" maxHeight="100%">
      <XStack justifyContent="space-around" alignItems="center">
        <H1>{date}</H1>
        <Button variant="outlined" onPress={() => onSave()}>
          Save
        </Button>
      </XStack>
      {/* Accordion component adapted from Tamagui docs: https://tamagui.dev/ui/accordion?subpath=accordion */}
      <Accordion overflow="hidden" type="multiple" width="100%">
        <Accordion.Item value="flow">
          <Accordion.Trigger flexDirection="row" justifyContent="space-between">
            {({ open }: { open: boolean }) => (
              <>
                <XStack justifyContent="space-between" width="100%">
                  <Text>Flow Intensity</Text>
                  <Separator vertical />
                  <Text>{options[flow]}</Text>
                  <Square animation="quick" rotate={open ? "180deg" : "0deg"}>
                    <ChevronDown size="$1" />
                  </Square>
                </XStack>
              </>
            )}
          </Accordion.Trigger>
          <Accordion.HeightAnimator animation="medium">
            <Accordion.Content animation="medium" exitStyle={{ opacity: 0 }}>
              <FlowToggleGroup
                selectedOption={flow}
                setSelectedOption={setFlow}
              />
            </Accordion.Content>
          </Accordion.HeightAnimator>
        </Accordion.Item>

        <Accordion.Item value="pain">
          <Accordion.Trigger flexDirection="row" justifyContent="space-between">
            {({ open }: { open: boolean }) => (
              <>
                <Paragraph>Pain</Paragraph>
                <Square animation="quick" rotate={open ? "180deg" : "0deg"}>
                  <ChevronDown size="$1" />
                </Square>
              </>
            )}
          </Accordion.Trigger>
          <Accordion.HeightAnimator animation="medium">
            <Accordion.Content animation="medium" exitStyle={{ opacity: 0 }}>
              <Paragraph>Nothing here yet!</Paragraph>
            </Accordion.Content>
          </Accordion.HeightAnimator>
        </Accordion.Item>

        <Accordion.Item value="notes">
          <Accordion.Trigger flexDirection="row" justifyContent="space-between">
            {({ open }: { open: boolean }) => (
              <>
                <Paragraph>Notes</Paragraph>
                <Square animation="quick" rotate={open ? "180deg" : "0deg"}>
                  <ChevronDown size="$1" />
                </Square>
              </>
            )}
          </Accordion.Trigger>
          <Accordion.HeightAnimator animation="medium">
            <Accordion.Content animation="medium" exitStyle={{ opacity: 0 }}>
              <TextArea placeholder="Add notes..." />
            </Accordion.Content>
          </Accordion.HeightAnimator>
        </Accordion.Item>
      </Accordion>
    </YStack>
  )
}
